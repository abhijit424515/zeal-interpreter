**PROCEDURE: main
	Return Type: <void>
	Formal Parameters:
**BEGIN: Abstract Syntax Tree 
         While: 
           Condition (
             Condition: NE<bool>
               L_Opd (Name : n_<int>)
               R_Opd (Num : 0<int>))
           Body (
             If: 
               Condition (
                 Condition: EQ<bool>
                   L_Opd (
                     Arith: Plus<int>
                       L_Opd (Name : a_<int>)
                       R_Opd (Name : b_<int>))
                   R_Opd (Name : target_<int>))
               Then (
                 Write: 
                   Arith: Plus<int>
                     L_Opd (Name : a_<int>)
                     R_Opd (Name : b_<int>))
               Else (
                 Asgn:
                   LHS (Name : n_<int>)
                   RHS (
                     Arith: Minus<int>
                       L_Opd (Name : n_<int>)
                       R_Opd (Num : 1<int>))
                 Asgn:
                   LHS (Name : a_<int>)
                   RHS (
                     Arith: Plus<int>
                       L_Opd (Name : a_<int>)
                       R_Opd (Num : 1<int>))
                 Asgn:
                   LHS (Name : b_<int>)
                   RHS (
                     Arith: Minus<int>
                       L_Opd (Name : b_<int>)
                       R_Opd (Num : 1<int>))))
         Write: String : "Not Find"<string>
**END: Abstract Syntax Tree 
