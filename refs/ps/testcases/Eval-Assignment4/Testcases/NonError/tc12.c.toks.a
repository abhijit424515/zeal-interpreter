	Token Name: VOID 	Lexeme: void 	 Lineno: 1
	Token Name: NAME 	Lexeme: main 	 Lineno: 1
	Token Name: LEFT_ROUND_BRACKET 	Lexeme: ( 	 Lineno: 1
	Token Name: RIGHT_ROUND_BRACKET 	Lexeme: ) 	 Lineno: 1
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 1
	Token Name: VOID 	Lexeme: void 	 Lineno: 2
	Token Name: NAME 	Lexeme: main 	 Lineno: 2
	Token Name: LEFT_ROUND_BRACKET 	Lexeme: ( 	 Lineno: 2
	Token Name: RIGHT_ROUND_BRACKET 	Lexeme: ) 	 Lineno: 2
	Token Name: LEFT_CURLY_BRACKET 	Lexeme: { 	 Lineno: 3
	Token Name: INTEGER 	Lexeme: int 	 Lineno: 4
	Token Name: NAME 	Lexeme: n 	 Lineno: 4
	Token Name: COMMA 	Lexeme: , 	 Lineno: 4
	Token Name: NAME 	Lexeme: i 	 Lineno: 4
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 4
	Token Name: INTEGER 	Lexeme: int 	 Lineno: 5
	Token Name: NAME 	Lexeme: sum 	 Lineno: 5
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 5
	Token Name: NAME 	Lexeme: sum 	 Lineno: 6
	Token Name: ASSIGN_OP 	Lexeme: = 	 Lineno: 6
	Token Name: INT_NUM 	Lexeme: 0 	 Lineno: 6
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 6
	Token Name: NAME 	Lexeme: i 	 Lineno: 7
	Token Name: ASSIGN_OP 	Lexeme: = 	 Lineno: 7
	Token Name: INT_NUM 	Lexeme: 1 	 Lineno: 7
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 7
	Token Name: READ 	Lexeme: read 	 Lineno: 8
	Token Name: NAME 	Lexeme: n 	 Lineno: 8
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 8
	Token Name: DO 	Lexeme: do 	 Lineno: 9
	Token Name: LEFT_CURLY_BRACKET 	Lexeme: { 	 Lineno: 10
	Token Name: NAME 	Lexeme: sum 	 Lineno: 11
	Token Name: ASSIGN_OP 	Lexeme: = 	 Lineno: 11
	Token Name: NAME 	Lexeme: sum 	 Lineno: 11
	Token Name: PLUS 	Lexeme: + 	 Lineno: 11
	Token Name: NAME 	Lexeme: i 	 Lineno: 11
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 11
	Token Name: NAME 	Lexeme: i 	 Lineno: 12
	Token Name: ASSIGN_OP 	Lexeme: = 	 Lineno: 12
	Token Name: NAME 	Lexeme: i 	 Lineno: 12
	Token Name: PLUS 	Lexeme: + 	 Lineno: 12
	Token Name: INT_NUM 	Lexeme: 1 	 Lineno: 12
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 12
	Token Name: RIGHT_CURLY_BRACKET 	Lexeme: } 	 Lineno: 13
	Token Name: WHILE 	Lexeme: while 	 Lineno: 13
	Token Name: LEFT_ROUND_BRACKET 	Lexeme: ( 	 Lineno: 13
	Token Name: NAME 	Lexeme: i 	 Lineno: 13
	Token Name: LESS_THAN 	Lexeme: < 	 Lineno: 13
	Token Name: NAME 	Lexeme: n 	 Lineno: 13
	Token Name: RIGHT_ROUND_BRACKET 	Lexeme: ) 	 Lineno: 13
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 13
	Token Name: WRITE 	Lexeme: print 	 Lineno: 14
	Token Name: NAME 	Lexeme: sum 	 Lineno: 14
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 14
	Token Name: RIGHT_CURLY_BRACKET 	Lexeme: } 	 Lineno: 15
