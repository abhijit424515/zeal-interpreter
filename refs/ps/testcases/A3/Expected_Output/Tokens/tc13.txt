	Token Name: VOID 	Lexeme: void 	 Lineno: 1
	Token Name: NAME 	Lexeme: main 	 Lineno: 1
	Token Name: LEFT_ROUND_BRACKET 	Lexeme: ( 	 Lineno: 1
	Token Name: RIGHT_ROUND_BRACKET 	Lexeme: ) 	 Lineno: 1
	Token Name: LEFT_CURLY_BRACKET 	Lexeme: { 	 Lineno: 2
	Token Name: INTEGER 	Lexeme: int 	 Lineno: 3
	Token Name: NAME 	Lexeme: marks 	 Lineno: 3
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 3
	Token Name: STRING 	Lexeme: string 	 Lineno: 4
	Token Name: NAME 	Lexeme: res 	 Lineno: 4
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 4
	Token Name: READ 	Lexeme: read 	 Lineno: 5
	Token Name: NAME 	Lexeme: marks 	 Lineno: 5
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 5
	Token Name: NAME 	Lexeme: res 	 Lineno: 6
	Token Name: ASSIGN_OP 	Lexeme: = 	 Lineno: 6
	Token Name: LEFT_ROUND_BRACKET 	Lexeme: ( 	 Lineno: 6
	Token Name: NAME 	Lexeme: marks 	 Lineno: 6
	Token Name: GREATER_THAN 	Lexeme: > 	 Lineno: 6
	Token Name: INT_NUM 	Lexeme: 50 	 Lineno: 6
	Token Name: RIGHT_ROUND_BRACKET 	Lexeme: ) 	 Lineno: 6
	Token Name: QUESTION_MARK 	Lexeme: ? 	 Lineno: 6
	Token Name: STR_CONST 	Lexeme: "pass" 	 Lineno: 6
	Token Name: COLON 	Lexeme: : 	 Lineno: 6
	Token Name: STR_CONST 	Lexeme: "fail" 	 Lineno: 6
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 6
	Token Name: WRITE 	Lexeme: print 	 Lineno: 7
	Token Name: NAME 	Lexeme: res 	 Lineno: 7
	Token Name: SEMICOLON 	Lexeme: ; 	 Lineno: 7
	Token Name: RIGHT_CURLY_BRACKET 	Lexeme: } 	 Lineno: 8
