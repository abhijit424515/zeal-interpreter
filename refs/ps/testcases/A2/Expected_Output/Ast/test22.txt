**PROCEDURE: main
	Return Type: <void>
	Formal Parameters:
**BEGIN: Abstract Syntax Tree 
         Asgn:
           LHS (Name : a_<int>)
           RHS (
                 Condition: OR<bool>
                   L_Opd (
                     Condition: NE<bool>
                       L_Opd (Name : b_<int>)
                       R_Opd (Num : 2<int>))
                   R_Opd (
                     Condition: GE<bool>
                       L_Opd (Name : b_<int>)
                       R_Opd (Name : a_<int>))
                 True_Part (
                   Arith: Minus<int>
                     L_Opd (Name : b_<int>)
                     R_Opd (Name : a_<int>))
                 False_Part (
                   Arith: Plus<int>
                     L_Opd (Name : c_<int>)
                     R_Opd (Name : a_<int>)))
         Write: Name : a_<int>
         Asgn:
           LHS (Name : boVal_<bool>)
           RHS (
             Condition: AND<bool>
               L_Opd (
                 Condition: GT<bool>
                   L_Opd (Name : a_<int>)
                   R_Opd (Name : b_<int>))
               R_Opd (
                 Condition: LE<bool>
                   L_Opd (Name : b_<int>)
                   R_Opd (Name : c_<int>)))
         Asgn:
           LHS (Name : boVal_<bool>)
           RHS (
             Condition: OR<bool>
               L_Opd (
                 Condition: EQ<bool>
                   L_Opd (
                     Arith: Mult<int>
                       L_Opd (Name : a_<int>)
                       R_Opd (Name : b_<int>))
                   R_Opd (
                     Arith: Div<int>
                       L_Opd (Name : b_<int>)
                       R_Opd (Name : c_<int>)))
               R_Opd (
                 Condition: LT<bool>
                   L_Opd (
                     Arith: Mult<int>
                       L_Opd (
                         Arith: Uminus<int>
                           L_Opd (Name : b_<int>))
                       R_Opd (Name : c_<int>))
                   R_Opd (
                     Arith: Plus<int>
                       L_Opd (Name : c_<int>)
                       R_Opd (Name : b_<int>))))
**END: Abstract Syntax Tree 
